apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        applicationId versions.applicationId
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName

        multiDexEnabled true

        resConfigs "zh"

        jackOptions {
            enabled true
        }

        ndk {
            abiFilters "armeabi"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/rxjava.properties'
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            // zipAlignEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize dexMemoryAllocation
        dexInProcess true
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'mips', 'x86', 'x86_64'
            universalApk true
        }
    }

    greendao {
        schemaVersion versions.dbVersion // change when table changes
        daoPackage "${versions.applicationId}.storage.db"
        targetGenDir 'src/main/java'
    }
}

dependencies {
    // base
    compile "com.android.support:recyclerview-v7:$versions.supportLibrariesVersion"
    compile "com.android.support:appcompat-v7:$versions.supportLibrariesVersion"
    compile "com.android.support:design:$versions.supportLibrariesVersion"
    compile "com.android.support:cardview-v7:$versions.supportLibrariesVersion"
    // di
    compile "com.jakewharton:butterknife:$versions.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$versions.butterknifeVersion"
    compile "org.greenrobot:greendao:$versions.greenDaoVersion"
    annotationProcessor "com.github.florent37:retrojsoup-compiler:$versions.rxJsoupVersion"
    // network
    compile "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit4RxJava2Version"
    compile "com.squareup.okhttp3:logging-interceptor:$versions.loggingInterceptorVersion"
    compile "com.github.bumptech.glide:glide:$versions.glideVersion"
    // rx
    compile "io.reactivex.rxjava2:rxandroid:$versions.rxAndroidVersion"
    compile "io.reactivex.rxjava2:rxjava:$versions.rxJavaVersion"
    compile "com.jakewharton.rxbinding2:rxbinding:$versions.rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4:$versions.rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$versions.rxBindingVersion"
    compile "com.tbruyelle.rxpermissions2:rxpermissions:$versions.rxPermissionVersion"
    compile ("com.trello.rxlifecycle2:rxlifecycle:$versions.rxLifecycleVersion", {
        exclude module: 'jsr305'
    })
    compile ("com.trello.rxlifecycle2:rxlifecycle-android:$versions.rxLifecycleVersion" , {
        exclude module: 'jsr305'
    })
    compile ("com.trello.rxlifecycle2:rxlifecycle-components:$versions.rxLifecycleVersion" , {
        exclude module: 'jsr305'
    })
    // jsoup
    compile "com.github.florent37:retrojsoup:$versions.rxJsoupVersion"
    compile "com.github.florent37:rxjsoup:$versions.rxJsoupVersion"
    compile "org.jsoup:jsoup:$versions.jsoupVersion"
    // other
    compile "jp.wasabeef:glide-transformations:$versions.glideTransfromVersion"
    compile "me.yokeyword:fragmentation:$versions.fragmentationVersion"
    compile "com.android.support:multidex:$versions.multidexVersion"
    compile "com.orhanobut:logger:$versions.loggerVersion"
    compile ("me.drakeet.multitype:multitype:$versions.multiTypeVersion", {
        exclude group: 'com.android.support'
    })
    compile ("com.github.franmontiel:PersistentCookieJar:$versions.cookieJarVersion" , {
        exclude module: 'jsr305'
    })
    // quality
    debugCompile "com.github.moduth:blockcanary-android:$versions.blockCanaryVersion"
    releaseCompile "com.github.moduth:blockcanary-no-op:$versions.blockCanaryVersion"
    debugCompile "com.squareup.leakcanary:leakcanary-android:$versions.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakCanaryVersion"
    debugCompile ("com.facebook.stetho:stetho-okhttp3:$versions.stethoOkHttpVersion", {
        exclude module: 'jsr305'
    })
    // test
    testCompile "junit:junit:$versions.junitVersion"
    androidTestCompile "com.android.support:support-annotations:$versions.supportLibrariesVersion"
    androidTestCompile "com.android.support.test:runner:$versions.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$versions.rulesVersion"
    androidTestCompile ("com.android.support.test.espresso:espresso-core:$versions.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}

